# APKBUILD based on linux-vanilla aport. Changes:
# - disabled module installation
# - add !check !tracedeps
# - package: just install zimage and kernel.release, because the kernel config
#	does not generate modules or dtb files
# - do not create -dev subpackage (makes no sense without module support)
#
# Kernel config based on: arch/arm/configs/lineageos_grouper_defconfig
# Changes:
# - enable devtmpfs (needed for udev -> touch support in weston)

_vendor=asus
_flavor=asus-grouper
_hash="953e26f2709dfe0c185c3c99c50b0c9d56d473a4"
_config="config-${_flavor}.armhf"

pkgname=linux-${_flavor}
pkgver=3.4.0
case $pkgver in
	*.*.*)  _kernver=${pkgver%.*};;
	*.*) _kernver=$pkgver;;
esac
pkgrel=4
arch="armhf"
pkgdesc="Nexus 7 (2012) kernel from LineageOS"
url="https://github.com/LineageOS/android_kernel_asus_grouper"
depends="postmarketos-mkinitfs"
makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev"
options="!strip !check !tracedeps"
install=
source="
	$pkgname-$_hash.tar.gz::https://github.com/LineageOS/android_kernel_asus_grouper/archive/${_hash}.tar.gz
	$_config
	compiler-gcc6.h
	duplicate-return-address-definition.patch
	nvram.txt
	fw_bcmdhd.bin
"
subpackages=""
license="GPL2"

_abi_release=${pkgver}
_carch="arm"
HOSTCC="${CC:-gcc}"
HOSTCC="${HOSTCC#${CROSS_COMPILE}}"

#ksrcdir="$srcdir/${_vendor}-kernel-grouper-${_hash}"
ksrcdir="$srcdir/android_kernel_asus_grouper-${_hash}"

prepare() {
	local _patch_failed=
	cd "$ksrcdir"

	# first apply patches in specified order
	for i in $source; do
		case $i in
		*.patch)
			msg "Applying $i..."
			if ! patch -s -p1 -N -i "$srcdir"/$i; then
				echo $i >>failed
				_patch_failed=1
			fi
			;;
		esac
	done

	if ! [ -z "$_patch_failed" ]; then
		error "The following patches failed:"
		cat failed
		return 1
	fi

	# gcc6 support
	cp -v "$srcdir/compiler-gcc6.h" "$ksrcdir/include/linux/"

	mkdir -p "$srcdir"/build
	cp "$srcdir"/$_config "$srcdir"/build/.config || return 1
	make -C "$ksrcdir" O="$srcdir"/build ARCH="$_carch" HOSTCC="$HOSTCC" \
		silentoldconfig
}



# this is so we can do: 'abuild menuconfig' to reconfigure kernel
menuconfig() {
	cd "$srcdir"/build || return 1
	make ARCH="$_carch" menuconfig
	cp .config "$startdir"/$_config
}

build() {
	cd "$srcdir"/build
	unset LDFLAGS
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-Alpine" \
		|| return 1
}

package() {
	echo "--[ Installing kernel ]--"
	install -Dm644 "$srcdir/build/arch/arm/boot/zImage" \
		"$pkgdir/boot/vmlinuz-$_flavor"

	install -D "$srcdir/build/include/config/kernel.release" \
		"$pkgdir/usr/share/kernel/$_flavor/kernel.release"
	
	echo "--[ Adding vendor firmware ]--"
	# install wifi firmware
	mkdir -p "$pkgdir/lib/firmware/postmarketos"
	cp "$srcdir/nvram.txt" "$pkgdir/lib/firmware/postmarketos/nvram.txt"
	cp "$srcdir/fw_bcmdhd.bin" "$pkgdir/lib/firmware/postmarketos/fw_bcmdhd.bin"
}

sha512sums="9ef2e62a9f589914743d2a585dce0307e32deb18ec12838a8626dd442ad03993cccaf7b0bf699e87510398d28a410270f893d3b624c9e98e6c5dc4568584bb17  linux-asus-grouper-953e26f2709dfe0c185c3c99c50b0c9d56d473a4.tar.gz
65de04287b29b7eeb957846cafdde575fa2cf81f5c53ad48ab1efbefb4d3c2586c185e183eeb134b7301c3fd0ca7a113a753d3c7fc6645f471d855ec4a31c009  config-asus-grouper.armhf
d80980e9474c82ba0ef1a6903b434d8bd1b092c40367ba543e72d2c119301c8b2d05265740e4104ca1ac5d15f6c4aa49e8776cb44264a9a28dc551e0d1850dcc  compiler-gcc6.h
9b15bf1f6cb66f54c785b0af6c9db8a7d63257e6fa3eeb0cbf47284334166aa6a7ff93e1b64ab69206c8047d64641199c0f5fcbc257bbe039263252fff45118e  duplicate-return-address-definition.patch
bd818f83928028f1a945df37539bf36354c5ec0ce43438e7bb9a2a502ccf88e287c3562f67dfcc1113f6d95cef4be086a6d0f9858ffbd236887421df59c9cfb8  nvram.txt
2c77481384cc510a85f0d9138713e27b561462d943bf68cc511ff424cc6899bc2068cf3bdeb56f77a31bdd810bb545dfacb63cd9144b4a9a66153cb5d17df71f  fw_bcmdhd.bin"
